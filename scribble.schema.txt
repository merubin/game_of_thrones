Rails Game of Thrones Notes

1. Create Rails environment inside existing directory

$ rails new . -d postgresql

Create the Database
rails db:create
Created database 'scribble_development'
Created database 'scribble_test'

2. Create Post and Comment models
They go in the app/models directories.
syntax:

class Post < ApplicationRecord
  # AR classes are singular and capitalized by convention
  has_many :comments, dependent: :destroy
end
class Comment < ApplicationRecord
  belongs_to :post
end





rails g model house  name

Model House name,	lord,	region,	description,	img_url
Model Character name	house_id	portrayed_by	picture_url	seasons	first_seen	status
rails g model character name portrayed_by	img_url	seasons	first_seen	status house:references
rails g model house name,	lord,	region,	description,	img_url


3. Migrations
Create both the POSTS and COMMENTS migration files

rails g migration create_characters name	portrayed_by	img_url	seasons	first_seen	status house:references
rails g migration create_houses  name,	lord,	region,	description,	img_url


Migrate with the following command
rails db:migrate

4 Seeds creation
modify the db/seeds.rb file to drop data and create records
run the rails command to insert the seed data

rails db:seed



post1 = Post.create({
  title: "First Post",
  article: "This is my first post",
  author_id: 1,
  views:0,
  enabled:false,
  comments_enabled:false
})
post1.Comment.create({
  comment: "Loser Post",
  user_id: 2,
  enabled: false
})
post1.Comment.create({
  comment: "2nd Comment on First Post",
  user_id: 3,
  enabled: false
})

post2 = Post.create({
  title: "Second Post",
  article: "YALP  Yet another Laim Post",
  author_id: 1,
  views:0,
  enabled:false,
  comments_enabled:false
})
post2.Comment.create({
  comment: "This is very Boring",
  user_id: 3,
  enabled: false
})





Create ERD for Posts and Comments
Create models for Posts and Comments
Create migrations for Posts and Comments
reate_table "comments", force: :cascade do |t|
   t.text     "body"
   t.integer  "post_id"
   t.datetime "created_at"
   t.datetime "updated_at"
   t.integer  "user_id"
 end

 create_table "posts", force: :cascade do |t|
   t.string   "title"
   t.text     "body"
   t.datetime "created_at"
   t.datetime "updated_at"
   t.integer  "user_id"
 end

 create_table "users", force: :cascade do |t|
   t.string   "email",                  default: "", null: false
   t.string   "encrypted_password",     default: "", null: false
   t.string   "reset_password_token"
   t.datetime "reset_password_sent_at"
   t.datetime "remember_created_at"
   t.integer  "sign_in_count",          default: 0,  null: false
   t.datetime "current_sign_in_at"
   t.datetime "last_sign_in_at"
   t.inet     "current_sign_in_ip"
   t.inet     "last_sign_in_ip"
   t.datetime "created_at",                          null: false
   t.datetime "updated_at",                          null: false
 end

 add_index "users", ["email"], name: "index_users_on_email", unique: true, using: :btree
 add_index "users", ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true, using: :btree
